#!/usr/bin/env python
# Adapted from : http://code.activestate.com/recipes/577358-pomodoro-timer/
from clize import run
import sys
import time
import subprocess
from datetime import datetime
import os


display = print
this_dir = os.path.dirname(__file__)
ALARM = "{0}/clock.mp3".format(this_dir)
DATA_FILENAME = os.getenv("HOME") + "/.pomodoro"
DEV_NULL = open("/dev/null","w")


def notify(title, content, more=''):
    from PyQt5.QtWidgets import QMessageBox
    from PyQt5.Qt import QApplication
    app = QApplication(sys.argv)
    msg = QMessageBox()
    msg.setIcon(QMessageBox.Information)
    msg.setText(content)
    msg.setWindowTitle(title)
    msg.setDetailedText(more)
    msg.show()
    app.exec()


def tick(duration):
    try:
        time.sleep(duration)
    except KeyboardInterrupt:
        display("Interrupting")
        interrupt = True
    else:
        interrupt = False
    return interrupt


def play_alarm(filename):
    "Plays the alarm sound specified by alarm"
    cmd = ["mpg123", filename]
    p = subprocess.Popen(cmd, stdout = DEV_NULL, stderr = subprocess.PIPE)
    p.wait()


def write_pomo(start, stop, tag):
    duration = (stop - start).total_seconds() / 60.
    line = "{0},{1},{2},{3}\n".format(tag, start, stop, duration)
    filename = DATA_FILENAME 
    fd = open(filename, "a")
    fd.write(line)
    fd.close()


def main(work=60, rest=5, *, repeat=float('inf'), alarm=True, notif=False):
    i = 0
    while i < repeat:
        display("Work now")
        start = datetime.now()
        interrupted = tick(int(work)*60)
        if interrupted:
            break
        stop = datetime.now()
        write_pomo(start, stop, "work")
        if alarm:
            play_alarm(ALARM)
        if notif:
            notify('pomodoro', 'Finished pomo, rest now.')
        display("Rest now")
        start = datetime.now()
        interrupted = tick(int(rest)*60)
        if interrupted:
            break
        stop = datetime.now()
        write_pomo(start, stop, "rest")

        if alarm:
            play_alarm(ALARM)
        if notif:
            notify('pomodoro', 'Finished rest, work now.')
        display("Cycle complete")
        i += 1
    return 0


if __name__ == "__main__":
    run(main)
